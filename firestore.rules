
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      // For now, any signed-in user is considered an admin.
      // In a production environment, you should implement a more robust role check,
      // for example, by checking for a custom claim or a document in a specific collection.
      // Example: return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
      return isSignedIn();
    }

    match /registered_users/{userId} {
      // Allow creation by anyone (public registration form)
      allow create: if true;
      
      // Only admins can read, update, or delete user registrations
      allow read, update, delete: if isAdmin();
    }
    
    // Admins can list all registered users
    match /registered_users/{userId} {
        allow list: if isAdmin();
    }

    match /winners/{winnerId} {
        // Anyone can read the winners list
        allow read, list: if true;
        
        // Only admins can create, update or delete winner entries
        allow create, update, delete: if isAdmin();
    }

    match /stats/{statId} {
        // Anyone can read stats
        allow read: if true;

        // Only admins can update stats
        allow write: if isAdmin();
    }
    
    // This is just a placeholder and can be secured further if needed
    match /users/{userId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}
